#
# this dockerfile roughly follows the 'Install ROS From Source' procedures from:
#   https://docs.ros.org/en/humble/Installation/Ubuntu-Development-Setup.html
#
ARG BASE_IMAGE=dustynv/ros:humble-desktop-l4t-r35.3.1
FROM ${BASE_IMAGE}

ARG ROS_PKG=ros_base
ENV ROS_DISTRO=humble
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}
ENV ROS_PYTHON_VERSION=3

ENV DEBIAN_FRONTEND=noninteractive
ENV SHELL /bin/bash
SHELL ["/bin/bash", "-c"] 

WORKDIR /tmp

# install gstreamer
RUN add-apt-repository universe && apt-get update && \
    apt-get install -y --no-install-recommends \
    libgstreamer1.0-0 \
    libgstreamer1.0-0-dbg \
    libgstreamer1.0-dev \
    libgstreamer-plugins-bad1.0-0 \
    libgstreamer-plugins-base1.0-0 \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer1.0 \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgtk-3-dev \
    gstreamer1.0-x && \
# install v4l2
    apt-get install -y libv4l-dev v4l-utils && \
    apt-get install -y libopenjp2-7 \
    libopenjp2-7-dev \
    libglew-dev \
    libtiff5-dev \
    libdc1394-22-dev \
    zlib1g-dev \
    libjpeg-dev \
    libpng-dev \
    libavcodec-dev \
    libavformat-dev \
    libavutil-dev \
    libpostproc-dev \
    libswscale-dev \
    libeigen3-dev \
    libtbb2 \
    libtbb-dev \
    libgtk2.0-dev \
    pkg-config \
    qv4l2 \
    libtesseract4 \
    unzip \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 
# upgrade cmake - https://stackoverflow.com/a/56690743
# this is needed to build some of the ROS2 packages
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
          libssl-dev \
		  software-properties-common \
		  apt-transport-https \
		  ca-certificates \
		  gnupg \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean && \	  	  
# install cmake
    wget https://github.com/Kitware/CMake/releases/download/v3.23.0-rc2/cmake-3.23.0-rc2.tar.gz && \
    tar -xzf cmake-3.23.0-rc2.tar.gz && \
    cd cmake-3.23.0-rc2 && cmake . -DCMAKE_BUILD_TYPE=Release && \
    make -j 12 && \
    make install && \
    rm -rf cmake-3.23.0-rc2.tar.gz && \
    rm -rf cmake-3.23.0-rc2

# boooost
RUN wget https://downloads.sourceforge.net/project/boost/boost/1.78.0/boost_1_78_0.tar.gz \
    && tar xfz boost_1_78_0.tar.gz \
    && rm boost_1_78_0.tar.gz \
    && cd boost_1_78_0 \
    && ./bootstrap.sh --prefix=/usr/local \
    && ./b2 install \
    && cd .. \
    && rm -rf boost_1_78_0

# build joystick drivers
RUN git clone -b foxy-devel https://github.com/ros-drivers/joystick_drivers && \
    cd joystick_drivers && \
    source /opt/ros/$ROS_DISTRO/install/setup.bash && \
    colcon build --merge-install --install-base /opt/ros/${ROS_DISTRO}/install --packages-up-to joy --cmake-args -DCMAKE_BUILD_TYPE=Release && \
    cd .. && rm -rf joystick_drivers

# setup entrypoint
COPY ./setup/ros_entrypoint_common.sh /ros_entrypoint.sh

RUN echo 'source ${ROS_ROOT}/install/setup.bash' >> /root/.bashrc

# install common apt packages
RUN apt-get update && apt-get install -y \
    libi2c-dev \
    vim

# install common python packages
RUN python3 -m pip install \
    Jetson.GPIO \
    dbus-next \
    evdev

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
WORKDIR /