FROM csmmaterobotics/commonv8_3:latest

# Location where source files will be copied in and built
# By default, this is root, which makes colcon build not work at all
WORKDIR /opt/ros/CSM_MATE_WS

# Base station specific dependencies

## raylib
# dependencies
RUN apt-get install -y libasound2-dev mesa-common-dev libx11-dev libxrandr-dev libxi-dev xorg-dev libgl1-mesa-dev libglu1-mesa-dev

RUN git clone https://github.com/raysan5/raylib.git raylib && \
    cd raylib && \
    mkdir build && cd build && \
    # see https://github.com/raysan5/raylib/wiki/CMake-Build-Options
    cmake -DBUILD_SHARED_LIBS=ON .. && \
    make && \
    make install
    
# Probably don't use VENV. Colcon has a rough time with it and it's not worth it
# RUN python3.6 -m venv /BASE_VENV

COPY setup/99-gpio.rules /etc/udev/rules.d
RUN groupadd -f -r gpio && \
    usermod -a -G gpio $(id -u -n)
# udevadm control --reload rules has a non-zero exit status (https://www.reddit.com/r/docker/comments/jeaw9c/comment/g9g8buu)
RUN udevadm control --reload-rules || echo 'rules reloaded'
RUN udevadm trigger

COPY src .

# build all packages defined in basestation_launch file
RUN . /opt/ros/$ROS_DISTRO/install/setup.sh && \
    colcon build --packages-up-to bs_launch

# Copy over initial run stuff.
# Entrypoint can more or less be understood as "run this no matter what". It sources the ROS install.
# CMD is the "go" button, and can be overriden
COPY setup/ros_entrypoint.sh /ros_entrypoint.sh
RUN chmod +x /ros_entrypoint.sh
ENTRYPOINT [ "/ros_entrypoint.sh" ]
# CMD ["ros2", "launch", "bs_launch", "bs.launch.py"]
CMD ["/bin/bash"]
